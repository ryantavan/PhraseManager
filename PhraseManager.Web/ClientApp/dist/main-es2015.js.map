{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/phrase.component.ts","./src/app/components/phrase.component.html","./src/app/nav-menu/nav-menu.component.ts","./src/app/nav-menu/nav-menu.component.html","./src/app/services/phrase.service.ts","./src/app/tools/spinner/spinner.component.ts","./src/app/tools/spinner/spinner.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","<body>\r\n  <app-nav-menu></app-nav-menu>\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</body>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { PhraseComponent } from './components/phrase.component';\r\nimport { SpinnerComponent } from \"./tools/spinner/spinner.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    PhraseComponent,\r\n    SpinnerComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: PhraseComponent, pathMatch: 'full' }\r\n    ])\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IPhraseViewModel, IPhraseViewModel as IPhraseViewModel1 } from '../models/phrase-viewmodel.model';\r\nimport { PhraseService } from \"../services/phrase.service\";\r\n\r\n@Component({\r\n  selector: 'phrase',\r\n  templateUrl: './phrase.component.html'\r\n})\r\nexport class PhraseComponent {\r\n  public phrases: IPhraseViewModel[];\r\n  public selectedPhrase = {} as IPhraseViewModel ;\r\n  public isWorking: boolean;\r\n  public isEditing: boolean = false;\r\n  private sortAscending: boolean = true;\r\n  public errorMessage: string = \"\";\r\n  public showAlert: boolean = false;\r\n\r\n  constructor(http: HttpClient,\r\n    @Inject('BASE_URL') baseUrl: string,\r\n    private phraseService: PhraseService) {\r\n    this.load();\r\n  }\r\n\r\n  private alert(message: string) {\r\n    this.showAlert = true;\r\n    this.errorMessage = message;\r\n    setTimeout(() => {\r\n      this.showAlert = false;\r\n    }, 3000);\r\n\r\n  }\r\n\r\n  private compareObjects(object1, object2, key) {\r\n    const obj1 = object1[key].toUpperCase();\r\n    const obj2 = object2[key].toUpperCase();\r\n\r\n    if (obj1 < obj2) {\r\n      return -1;\r\n    }\r\n    if (obj1 > obj2) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n\r\n  public sort(fieldName: string) {\r\n    this.sortAscending = !this.sortAscending;\r\n    if (this.sortAscending) {\r\n      this.phrases.sort((book1, book2) => {\r\n        return this.compareObjects(book1, book2, fieldName);\r\n      });\r\n    } else {\r\n      this.phrases.sort((book1, book2) => {\r\n        return this.compareObjects(book2, book1, fieldName);\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  public load() {\r\n    this.isWorking = true;\r\n    this.phraseService.getPhrases().subscribe(result => {\r\n      this.isWorking = false;\r\n      this.isEditing = false;\r\n        this.phrases = result;\r\n      },\r\n      error => console.error(error));\r\n  }\r\n\r\n  public add() {\r\n    this.isWorking = true;\r\n    //let phrase = { term: this.selectedPhrase.term, definition: this.selectedPhrase.definition } as IPhraseViewModel;\r\n\r\n    this.phraseService.savePhrase(this.selectedPhrase).subscribe(result => {\r\n        this.isWorking = false;\r\n        this.load();\r\n      },\r\n      error => {\r\n        // this is not the best practice to handle the validation error.\r\n        // validation errors should be encapsulated inside the return type.\r\n        this.isWorking = false;\r\n        this.alert(\"There have been some errors! Please check your inputs\");\r\n         console.error(error);\r\n      });\r\n      \r\n  }\r\n\r\n  public update() {\r\n    this.isEditing = false;\r\n    this.phraseService.updatePhrase(this.selectedPhrase).subscribe(result => {\r\n        this.isWorking = false;\r\n        this.load();\r\n      },\r\n      error => {\r\n        // this is not the best practice to handle the validation error.\r\n        // validation errors should be encapsulated inside the return type.\r\n        this.isWorking = false;\r\n        this.alert(\"There have been some errors! Please check your inputs\");\r\n        console.error(error);\r\n      });\r\n\r\n  }\r\n\r\n  public edit(phrase: IPhraseViewModel1) {\r\n    this.selectedPhrase = phrase;\r\n    this.isEditing = true;\r\n  }\r\n\r\n\r\n  public delete(phrase: IPhraseViewModel) {\r\n    this.isWorking = true;\r\n\r\n    this.phraseService.deletePhrase(phrase.id).subscribe(result => {\r\n      this.isWorking = false;\r\n        //we also can delete the from the local collection, but for the test app it should Ok \r\n        this.load();\r\n      },\r\n      error => console.error(error));\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n\r\n\r\n<h1 id=\"tableLabel\">Get and Save Terms and Definitions</h1>\r\n\r\n<p>Please provide the term and it's definition to add to the database</p>\r\n<div class=\"border rounded pl-3\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <div class=\"form-group mb-2\">\r\n        <label class=\"mr-2\">Term</label>\r\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"selectedPhrase.term\" />\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <div class=\"form-group mx-sm-3 mb-2\">\r\n        <label class=\"mr-2\">Definition</label>\r\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"selectedPhrase.definition\" />\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n  <div *ngIf=\"isEditing\" class=\"row\">\r\n    <button (click)=\"update()\" type=\"submit\" class=\"btn btn-primary w-25 mb-2 ml-3 float-right\">Update</button>\r\n  </div>\r\n  <div *ngIf=\"!isEditing\" class=\"row\">\r\n    <button (click)=\"add()\" type=\"submit\" class=\"btn btn-primary w-25 mb-2 ml-3 float-right\">Add</button>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"showAlert\" class=\"alert alert-danger\" role=\"alert\">\r\n  {{errorMessage}}\r\n</div>\r\n\r\n\r\n<p *ngIf=\"isWorking\"><app-spinner></app-spinner></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"phrases\">\r\n  <thead>\r\n    <tr>\r\n      <th><a href=\"#\" (click)=\"sort('term')\">Term <i *ngIf=\"sortAscending\" class=\"fa fa-sort-alpha-asc\" aria-hidden=\"true\"></i><i *ngIf=\"!sortAscending\" class=\"fa fa-sort-alpha-desc\" aria-hidden=\"true\"></i></a></th>\r\n      <th><a href=\"#\" (click)=\"sort('definition')\">Definition <i *ngIf=\"sortAscending\" class=\"fa fa-sort-alpha-asc\" aria-hidden=\"true\"></i><i *ngIf=\"!sortAscending\" class=\"fa fa-sort-alpha-desc\" aria-hidden=\"true\"></i></a></th>\r\n      <th></th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let phrase of phrases\">\r\n      <td>{{ phrase.term }}</td>\r\n      <td>{{ phrase.definition }}</td>\r\n      <td style=\"text-align: right; width: 200px;\"> <button class=\"btn btn-dark\" (click)=\"edit(phrase)\"> <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> Edit</button><button class=\"btn btn-danger ml-1\" (click)=\"delete(phrase)\"><i class=\"fa fa-trash\"></i> Delete</button></td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","<header>\r\n  <nav class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\">\r\n    <div class=\"container\">\r\n      <a class=\"navbar-brand\" [routerLink]=\"['/']\">Phrase Manager</a>\r\n    </div>\r\n  </nav>\r\n</header>\r\n","import { Injectable } from '@angular/core';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IPhraseViewModel } from \"../models/phrase-viewmodel.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PhraseService {\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) { }\r\n\r\n  public getPhrases() {\r\n    return this.http.get<IPhraseViewModel[]>(this.baseUrl + 'phrase');\r\n  }\r\n\r\n  public savePhrase(phrase : IPhraseViewModel) {\r\n    return this.http.post(this.baseUrl + 'phrase',phrase);\r\n  }\r\n\r\n  public updatePhrase(phrase: IPhraseViewModel) {\r\n    return this.http.put(this.baseUrl + 'phrase', phrase);\r\n  }\r\n\r\n  public deletePhrase(phraseId: string) {\r\n    return this.http.delete(this.baseUrl + 'phrase/?phraseId='+phraseId);\r\n  }\r\n  \r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.scss']\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n\r\n  @Input() message = '';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div id=\"loader\">\r\n      <div class=\"dot\"></div>\r\n      <div class=\"dot\"></div>\r\n      <div class=\"dot\"></div>\r\n      <div class=\"dot\"></div>\r\n      <div class=\"dot\"></div>\r\n      <div class=\"dot\"></div>\r\n      <div class=\"dot\"></div>\r\n      <div class=\"dot\"></div>\r\n      <div class=\"loading\"></div>\r\n    </div>\r\n\r\n    <p class=\"spinner-message\" *ngIf=\"message && message !== ''\">\r\n      {{message}}\r\n    </p>\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}