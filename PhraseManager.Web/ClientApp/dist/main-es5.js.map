{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/phrase.component.ts","webpack:///src/app/components/phrase.component.html","webpack:///src/app/nav-menu/nav-menu.component.ts","webpack:///src/app/nav-menu/nav-menu.component.html","webpack:///src/app/services/phrase.service.ts","webpack:///src/app/tools/spinner/spinner.component.ts","webpack:///src/app/tools/spinner/spinner.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","AppModule","withServerTransition","appId","forRoot","path","component","pathMatch","declarations","imports","providers","bootstrap","PhraseComponent","http","baseUrl","phraseService","selectedPhrase","isEditing","sortAscending","errorMessage","showAlert","load","message","setTimeout","object1","object2","key","obj1","toUpperCase","obj2","fieldName","phrases","sort","book1","book2","compareObjects","isWorking","getPhrases","subscribe","result","error","console","savePhrase","alert","updatePhrase","phrase","deletePhrase","NavMenuComponent","isExpanded","styleUrls","PhraseService","get","post","put","phraseId","providedIn","SpinnerComponent","environment","production","getBaseUrl","document","getElementsByTagName","href","provide","useFactory","deps","bootstrapModule","err","log"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","<body>\r\n  <app-nav-menu></app-nav-menu>\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</body>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { PhraseComponent } from './components/phrase.component';\r\nimport { SpinnerComponent } from \"./tools/spinner/spinner.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    PhraseComponent,\r\n    SpinnerComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: PhraseComponent, pathMatch: 'full' }\r\n    ])\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IPhraseViewModel, IPhraseViewModel as IPhraseViewModel1 } from '../models/phrase-viewmodel.model';\r\nimport { PhraseService } from \"../services/phrase.service\";\r\n\r\n@Component({\r\n  selector: 'phrase',\r\n  templateUrl: './phrase.component.html'\r\n})\r\nexport class PhraseComponent {\r\n  public phrases: IPhraseViewModel[];\r\n  public selectedPhrase = {} as IPhraseViewModel ;\r\n  public isWorking: boolean;\r\n  public isEditing: boolean = false;\r\n  private sortAscending: boolean = true;\r\n  public errorMessage: string = \"\";\r\n  public showAlert: boolean = false;\r\n\r\n  constructor(http: HttpClient,\r\n    @Inject('BASE_URL') baseUrl: string,\r\n    private phraseService: PhraseService) {\r\n    this.load();\r\n  }\r\n\r\n  private alert(message: string) {\r\n    this.showAlert = true;\r\n    this.errorMessage = message;\r\n    setTimeout(() => {\r\n      this.showAlert = false;\r\n    }, 3000);\r\n\r\n  }\r\n\r\n  private compareObjects(object1, object2, key) {\r\n    const obj1 = object1[key].toUpperCase();\r\n    const obj2 = object2[key].toUpperCase();\r\n\r\n    if (obj1 < obj2) {\r\n      return -1;\r\n    }\r\n    if (obj1 > obj2) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n\r\n  public sort(fieldName: string) {\r\n    this.sortAscending = !this.sortAscending;\r\n    if (this.sortAscending) {\r\n      this.phrases.sort((book1, book2) => {\r\n        return this.compareObjects(book1, book2, fieldName);\r\n      });\r\n    } else {\r\n      this.phrases.sort((book1, book2) => {\r\n        return this.compareObjects(book2, book1, fieldName);\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  public load() {\r\n    this.isWorking = true;\r\n    this.phraseService.getPhrases().subscribe(result => {\r\n      this.isWorking = false;\r\n      this.isEditing = false;\r\n        this.phrases = result;\r\n      },\r\n      error => console.error(error));\r\n  }\r\n\r\n  public add() {\r\n    this.isWorking = true;\r\n    //let phrase = { term: this.selectedPhrase.term, definition: this.selectedPhrase.definition } as IPhraseViewModel;\r\n\r\n    this.phraseService.savePhrase(this.selectedPhrase).subscribe(result => {\r\n        this.isWorking = false;\r\n        this.load();\r\n      },\r\n      error => {\r\n        // this is not the best practice to handle the validation error.\r\n        // validation errors should be encapsulated inside the return type.\r\n        this.isWorking = false;\r\n        this.alert(\"There have been some errors! Please check your inputs\");\r\n         console.error(error);\r\n      });\r\n      \r\n  }\r\n\r\n  public update() {\r\n    this.isEditing = false;\r\n    this.phraseService.updatePhrase(this.selectedPhrase).subscribe(result => {\r\n        this.isWorking = false;\r\n        this.load();\r\n      },\r\n      error => {\r\n        // this is not the best practice to handle the validation error.\r\n        // validation errors should be encapsulated inside the return type.\r\n        this.isWorking = false;\r\n        this.alert(\"There have been some errors! Please check your inputs\");\r\n        console.error(error);\r\n      });\r\n\r\n  }\r\n\r\n  public edit(phrase: IPhraseViewModel1) {\r\n    this.selectedPhrase = phrase;\r\n    this.isEditing = true;\r\n  }\r\n\r\n\r\n  public delete(phrase: IPhraseViewModel) {\r\n    this.isWorking = true;\r\n\r\n    this.phraseService.deletePhrase(phrase.id).subscribe(result => {\r\n      this.isWorking = false;\r\n        //we also can delete the from the local collection, but for the test app it should Ok \r\n        this.load();\r\n      },\r\n      error => console.error(error));\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n\r\n\r\n<h1 id=\"tableLabel\">Get and Save Terms and Definitions</h1>\r\n\r\n<p>Please provide the term and it's definition to add to the database</p>\r\n<div class=\"border rounded pl-3\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <div class=\"form-group mb-2\">\r\n        <label class=\"mr-2\">Term</label>\r\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"selectedPhrase.term\" />\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <div class=\"form-group mx-sm-3 mb-2\">\r\n        <label class=\"mr-2\">Definition</label>\r\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"selectedPhrase.definition\" />\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n  <div *ngIf=\"isEditing\" class=\"row\">\r\n    <button (click)=\"update()\" type=\"submit\" class=\"btn btn-primary w-25 mb-2 ml-3 float-right\">Update</button>\r\n  </div>\r\n  <div *ngIf=\"!isEditing\" class=\"row\">\r\n    <button (click)=\"add()\" type=\"submit\" class=\"btn btn-primary w-25 mb-2 ml-3 float-right\">Add</button>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"showAlert\" class=\"alert alert-danger\" role=\"alert\">\r\n  {{errorMessage}}\r\n</div>\r\n\r\n\r\n<p *ngIf=\"isWorking\"><app-spinner></app-spinner></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"phrases\">\r\n  <thead>\r\n    <tr>\r\n      <th><a href=\"#\" (click)=\"sort('term')\">Term <i *ngIf=\"sortAscending\" class=\"fa fa-sort-alpha-asc\" aria-hidden=\"true\"></i><i *ngIf=\"!sortAscending\" class=\"fa fa-sort-alpha-desc\" aria-hidden=\"true\"></i></a></th>\r\n      <th><a href=\"#\" (click)=\"sort('definition')\">Definition <i *ngIf=\"sortAscending\" class=\"fa fa-sort-alpha-asc\" aria-hidden=\"true\"></i><i *ngIf=\"!sortAscending\" class=\"fa fa-sort-alpha-desc\" aria-hidden=\"true\"></i></a></th>\r\n      <th></th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let phrase of phrases\">\r\n      <td>{{ phrase.term }}</td>\r\n      <td>{{ phrase.definition }}</td>\r\n      <td style=\"text-align: right; width: 200px;\"> <button class=\"btn btn-dark\" (click)=\"edit(phrase)\"> <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> Edit</button><button class=\"btn btn-danger ml-1\" (click)=\"delete(phrase)\"><i class=\"fa fa-trash\"></i> Delete</button></td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","<header>\r\n  <nav class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\">\r\n    <div class=\"container\">\r\n      <a class=\"navbar-brand\" [routerLink]=\"['/']\">Phrase Manager</a>\r\n    </div>\r\n  </nav>\r\n</header>\r\n","import { Injectable } from '@angular/core';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IPhraseViewModel } from \"../models/phrase-viewmodel.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PhraseService {\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) { }\r\n\r\n  public getPhrases() {\r\n    return this.http.get<IPhraseViewModel[]>(this.baseUrl + 'phrase');\r\n  }\r\n\r\n  public savePhrase(phrase : IPhraseViewModel) {\r\n    return this.http.post(this.baseUrl + 'phrase',phrase);\r\n  }\r\n\r\n  public updatePhrase(phrase: IPhraseViewModel) {\r\n    return this.http.put(this.baseUrl + 'phrase', phrase);\r\n  }\r\n\r\n  public deletePhrase(phraseId: string) {\r\n    return this.http.delete(this.baseUrl + 'phrase/?phraseId='+phraseId);\r\n  }\r\n  \r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.scss']\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n\r\n  @Input() message = '';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div id=\"loader\">\r\n      <div class=\"dot\"></div>\r\n      <div class=\"dot\"></div>\r\n      <div class=\"dot\"></div>\r\n      <div class=\"dot\"></div>\r\n      <div class=\"dot\"></div>\r\n      <div class=\"dot\"></div>\r\n      <div class=\"dot\"></div>\r\n      <div class=\"dot\"></div>\r\n      <div class=\"loading\"></div>\r\n    </div>\r\n\r\n    <p class=\"spinner-message\" *ngIf=\"message && message !== ''\">\r\n      {{message}}\r\n    </p>\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\r\n\r\n"]}